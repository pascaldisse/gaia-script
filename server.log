warning: unused variable: `idx`
   --> src/ast.rs:113:38
    |
113 |             LayerType::Convolutional(idx) => write!(f, "C₁")?,
    |                                      ^^^ help: if this is intentional, prefix it with an underscore: `_idx`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `idx`
   --> src/ast.rs:114:30
    |
114 |             LayerType::Dense(idx) => write!(f, "D₁")?,
    |                              ^^^ help: if this is intentional, prefix it with an underscore: `_idx`

warning: unused variable: `from_value`
   --> src/interpreter.rs:337:13
    |
337 |         let from_value = self.interpret(&loss.from)?;
    |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_from_value`

warning: unused variable: `to_value`
   --> src/interpreter.rs:343:17
    |
343 |             let to_value = self.interpret(&to_component_clone)?;
    |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_to_value`

warning: `gaiascript` (lib) generated 4 warnings
warning: unused import: `std::sync::Arc`
 --> src/web_server.rs:7:5
  |
7 | use std::sync::Arc;
  |     ^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: fields `data` and `shape` are never read
  --> src/interpreter.rs:23:9
   |
22 | pub struct Tensor {
   |            ------ fields in this struct
23 |     pub data: Array<f32, IxDyn>,
   |         ^^^^
24 |     pub shape: Vec<usize>,
   |         ^^^^^
   |
   = note: `Tensor` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis
   = note: `#[warn(dead_code)]` on by default

warning: method `reshape` is never used
  --> src/interpreter.rs:33:12
   |
27 | impl Tensor {
   | ----------- method in this implementation
...
33 |     pub fn reshape(&self, new_shape: Vec<usize>) -> Result<Tensor, RuntimeError> {
   |            ^^^^^^^

warning: field `0` is never read
  --> src/interpreter.rs:58:12
   |
58 |     Number(f32),
   |     ------ ^^^
   |     |
   |     field in this variant
   |
   = note: `Value` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis
help: consider changing the field to be of unit type to suppress this warning while preserving the field numbering, or remove the field
   |
58 -     Number(f32),
58 +     Number(()),
   |

warning: method `get_variable` is never used
  --> src/interpreter.rs:81:12
   |
69 | impl Environment {
   | ---------------- method in this implementation
...
81 |     pub fn get_variable(&self, name: &str) -> Option<&Value> {
   |            ^^^^^^^^^^^^

warning: method `get_structure` is never used
   --> src/interpreter.rs:114:12
    |
101 | impl NetworkModel {
    | ----------------- method in this implementation
...
114 |     pub fn get_structure(&self) -> String {
    |            ^^^^^^^^^^^^^

warning: fields `filters`, `kernel_size`, and `activation` are never read
   --> src/interpreter.rs:123:9
    |
122 |     Conv {
    |     ---- fields in this variant
123 |         filters: usize,
    |         ^^^^^^^
124 |         kernel_size: usize,
    |         ^^^^^^^^^^^
125 |         activation: ActivationFunction,
    |         ^^^^^^^^^^
    |
    = note: `LayerConfig` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `units` and `activation` are never read
   --> src/interpreter.rs:128:9
    |
127 |     Dense {
    |     ----- fields in this variant
128 |         units: usize,
    |         ^^^^^
129 |         activation: ActivationFunction,
    |         ^^^^^^^^^^
    |
    = note: `LayerConfig` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: field `size` is never read
   --> src/interpreter.rs:132:9
    |
131 |     Pooling {
    |     ------- field in this variant
132 |         size: usize,
    |         ^^^^
    |
    = note: `LayerConfig` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: field `units` is never read
   --> src/interpreter.rs:136:9
    |
135 |     LSTM {
    |     ---- field in this variant
136 |         units: usize,
    |         ^^^^^
    |
    = note: `LayerConfig` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: variants `UndefinedComponent` and `CompilationError` are never constructed
  --> src/compiler.rs:9:5
   |
7  | pub enum CompilerError {
   |          ------------- variants in this enum
8  |     #[error("Undefined component: {0}")]
9  |     UndefinedComponent(String),
   |     ^^^^^^^^^^^^^^^^^^
...
12 |     CompilationError(String),
   |     ^^^^^^^^^^^^^^^^
   |
   = note: `CompilerError` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: `gaiascript` (bin "gaiascript") generated 15 warnings (4 duplicates) (run `cargo fix --bin "gaiascript"` to apply 1 suggestion)
    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.16s
     Running `target/debug/gaiascript serve --port 7070`
Server started at http://localhost:7070
